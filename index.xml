<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stephen Ashmore</title>
    <link>http://ashmore.io/</link>
    <description>Recent content on Stephen Ashmore</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Dec 2016 14:32:59 -0600</lastBuildDate>
    <atom:link href="http://ashmore.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Practical Techniques for Using Neural Networks to Estimate State From Images</title>
      <link>http://ashmore.io/publication/icmla16/</link>
      <pubDate>Sun, 18 Dec 2016 14:32:59 -0600</pubDate>
      
      <guid>http://ashmore.io/publication/icmla16/</guid>
      <description>&lt;p&gt;This paper is a part of our work on using neural networks to train robots to perform problems.
It includes practical techniques for dealing with huge images, chaotic systems, and more.&lt;/p&gt;

&lt;p&gt;Abstract:
An important task for training a robot (virtual or real) is to estimate state.
State includes the state of the robot and its environment.
Images from digital cameras are commonly used to monitor the robot due to the rich information, and low-cost hardware.
Neural networks excel at categorizing images, and should prove powerful to estimate the state of the robot from these images.
There are many problems that occur when attempting to estimate state with neural networks, including high resolution of images, training time, vanishing gradient, and more.
This paper presents several practical techniques for facilitating state estimation from images with neural networks.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Master&#39;s Thesis, 2015</title>
      <link>http://ashmore.io/publication/thesis/</link>
      <pubDate>Mon, 19 Sep 2016 18:02:25 -0500</pubDate>
      
      <guid>http://ashmore.io/publication/thesis/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Fourier Networks 2016</title>
      <link>http://ashmore.io/publication/fourierNetworks16/</link>
      <pubDate>Mon, 19 Sep 2016 18:02:13 -0500</pubDate>
      
      <guid>http://ashmore.io/publication/fourierNetworks16/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Fourier Networks 2014</title>
      <link>http://ashmore.io/publication/fourierNetworks14/</link>
      <pubDate>Mon, 19 Sep 2016 18:01:57 -0500</pubDate>
      
      <guid>http://ashmore.io/publication/fourierNetworks14/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Forward Bipartite Alignment</title>
      <link>http://ashmore.io/publication/ijcnn15/</link>
      <pubDate>Mon, 19 Sep 2016 18:01:15 -0500</pubDate>
      
      <guid>http://ashmore.io/publication/ijcnn15/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Super Neural Scaler</title>
      <link>http://ashmore.io/project/superScaler/</link>
      <pubDate>Mon, 19 Sep 2016 17:42:31 -0500</pubDate>
      
      <guid>http://ashmore.io/project/superScaler/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Image Compression</title>
      <link>http://ashmore.io/project/imagecompression/</link>
      <pubDate>Mon, 19 Sep 2016 16:20:36 -0500</pubDate>
      
      <guid>http://ashmore.io/project/imagecompression/</guid>
      <description>&lt;p&gt;Image Compression is a useful tool to save disk space, and computation speed. JPG is a great example of a popular image compression technique. However, can we do better with a machine learning technique like neural networks? I&amp;rsquo;m playing around with neural networks to see how well a technique I call neural inference can compress an image. A few caveats, it will probably be much slower than JPG. Depending on the implementation, you could end up using a lot of &amp;ldquo;feed forwards&amp;rdquo; to generate the uncompressed version of the image, and that is just not good for displaying an image. Users demand super fast display of images, and neural networks may not be the best here.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>